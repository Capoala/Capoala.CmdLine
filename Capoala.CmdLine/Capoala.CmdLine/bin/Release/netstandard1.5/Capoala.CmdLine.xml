<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Capoala.CmdLine</name>
    </assembly>
    <members>
        <member name="T:Capoala.CmdLine.CommandLineSetManager">
            <summary>
            An internal class designed to store behind-the-scenes data that could othewise cause undesirable effects to the interworkings of the assembly.
            </summary>
        </member>
        <member name="P:Capoala.CmdLine.CommandLineSetManager.KnownSpecifications">
            <summary>
            A collection of instatiated <see cref="T:Capoala.CmdLine.ICommandLineSpecification"/> objects.
            </summary>
        </member>
        <member name="P:Capoala.CmdLine.CommandLineSetManager.KnownArguments">
            <summary>
            A collection of instatiated <see cref="T:Capoala.CmdLine.ICommandLineArgument"/> objects.
            </summary>
        </member>
        <member name="T:Capoala.CmdLine.CommandLineLinq">
            <summary>
            Contains extensions methods that extend native LINQ functionality.
            </summary>
        </member>
        <member name="M:Capoala.CmdLine.CommandLineLinq.ExcludeSubset``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns the specified collection, minus the given subset. 
            </summary>
            <typeparam name="T">The type of object in the collection.</typeparam>
            <param name="sourceCollection">The source collection.</param>
            <param name="subset">The subset to remove from the source collection.</param>
            <returns>
            Returns the source collection, minus the subset. 
            If the subset was not found, then the source collection is returned without modification.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            Throws when <paramref name="sourceCollection"/> is null.
            </exception>
        </member>
        <member name="M:Capoala.CmdLine.CommandLineLinq.GetSubset``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns the specified subset of arguments from the source collection.
            </summary>
            <typeparam name="T">The type4 of object in the collection.</typeparam>
            <param name="sourceCollection">The source collection.</param>
            <param name="subset">The subset to remove from the source collection.</param>
            <returns>
            Returns the subet collection if found in the source collection. 
            If the subset was not found, then an empty collection is returned.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            Throws when <paramref name="sourceCollection"/> is null.
            </exception>
        </member>
        <member name="M:Capoala.CmdLine.CommandLineLinq.UnorderedSequenceEquals``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Determines whether two sequences contain the same values, regardless of order.
            </summary>
            <typeparam name="T">The type of object.</typeparam>
            <param name="firstSequence">The source collection.</param>
            <param name="secondSequence">The collection to compare to.</param>
            <returns>
            Returns true if both sequences contain the same values.
            Returns false if <paramref name="secondSequence"/> is null, or the sequences do not contain the same values.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            Throws when <paramref name="firstSequence"/> is null.
            </exception>
        </member>
        <member name="T:Capoala.CmdLine.CommandLineSpecificationBase">
            <summary>
            The base implementation of <see cref="T:Capoala.CmdLine.ICommandLineSpecification"/>. This class can only be inherited.
            </summary>
        </member>
        <member name="P:Capoala.CmdLine.CommandLineSpecificationBase.Hierarchy">
            <summary>
            Represents the hierarchal position in a parent-child relationship.
            Lower numbers represent a parent to a higher numbered child.
            </summary>
        </member>
        <member name="P:Capoala.CmdLine.CommandLineSpecificationBase.Delimiter">
            <summary>
            Represent the delimiter used for a command (switch).
            </summary>
        </member>
        <member name="M:Capoala.CmdLine.CommandLineSpecificationBase.#ctor(System.Int32,System.String)">
            <summary>
            Creates new instance of <see cref="T:Capoala.CmdLine.CommandLineSpecificationBase"/>.
            </summary>
            <param name="hierarchy">The hierarchal position in a parent-child relationship.</param>
            <param name="delimiter">The delimiter used for a command (switch).</param>
            <exception cref="T:System.ArgumentException">
            Throws when <paramref name="delimiter"/> is null or empty or contains an alpha-numeric character.
            </exception>
            <exception cref="T:System.ArgumentException">
            Throws when <paramref name="hierarchy"/> or <paramref name="delimiter"/> has already been declared.
            </exception>
        </member>
        <member name="M:Capoala.CmdLine.CommandLineSpecificationBase.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>
            Returns true if the specified object is equal to the current object; otherwise, false.
            </returns>
        </member>
        <member name="M:Capoala.CmdLine.CommandLineSpecificationBase.Equals(Capoala.CmdLine.CommandLineSpecificationBase)">
            <summary>
            Determines whether this instance and another specified <see cref="T:Capoala.CmdLine.CommandLineSpecificationBase"/> object have the same value.
            </summary>
            <param name="other">The <see cref="T:Capoala.CmdLine.CommandLineSpecificationBase"/> to compare to this instance.</param>
            <returns>
            Returns true if the value of the value parameter is the same as the value of this instance; otherwise, false. 
            If value is null, the method returns false.
            </returns>
        </member>
        <member name="M:Capoala.CmdLine.CommandLineSpecificationBase.GetHashCode">
            <summary>
            Returns the hash code for this <see cref="T:Capoala.CmdLine.CommandLineSpecificationBase"/>.
            </summary>
            <returns>
            Returns a 32-bit signed integer hash code.
            </returns>
        </member>
        <member name="M:Capoala.CmdLine.CommandLineSpecificationBase.op_Equality(Capoala.CmdLine.CommandLineSpecificationBase,Capoala.CmdLine.CommandLineSpecificationBase)">
            <summary>
            Determines whether two specified <see cref="T:Capoala.CmdLine.CommandLineSpecificationBase"/> objects have the same value.
            </summary>
            <param name="base1">The first <see cref="T:Capoala.CmdLine.CommandLineSpecificationBase"/> to compare, or null.</param>
            <param name="base2">The second <see cref="T:Capoala.CmdLine.CommandLineSpecificationBase"/> to compare, or null.</param>
            <returns>
            Returns true if the value of <paramref name="base1"/> is the same as the value of <paramref name="base2"/>; otherwise, false.
            </returns>
        </member>
        <member name="M:Capoala.CmdLine.CommandLineSpecificationBase.op_Inequality(Capoala.CmdLine.CommandLineSpecificationBase,Capoala.CmdLine.CommandLineSpecificationBase)">
            <summary>
            Determines whether two specified <see cref="T:Capoala.CmdLine.CommandLineSpecificationBase"/> objects have different values.
            </summary>
            <param name="base1">The first <see cref="T:Capoala.CmdLine.CommandLineSpecificationBase"/> to compare, or null.</param>
            <param name="base2">The second <see cref="T:Capoala.CmdLine.CommandLineSpecificationBase"/> to compare, or null.</param>
            <returns>
            Returns true if the value of <paramref name="base1"/> is different from the value of <paramref name="base2"/>; otherwise, false.
            </returns>
        </member>
        <member name="T:Capoala.CmdLine.CommandLineArgumentBase">
            <summary>
            The base implementation of <see cref="T:Capoala.CmdLine.ICommandLineArgument"/>. This class can only be inherited.
            </summary>
        </member>
        <member name="P:Capoala.CmdLine.CommandLineArgumentBase.Specification">
            <summary>
            TThe <see cref="T:Capoala.CmdLine.ICommandLineSpecification"/> used to define this argument's characteristics.
            </summary>
        </member>
        <member name="P:Capoala.CmdLine.CommandLineArgumentBase.Command">
            <summary>
            The command - switch - value used at the command line.
            <para>
            This property will always return the <see cref="P:Capoala.CmdLine.CommandLineArgumentBase.Specification"/>.Delimiter.
            </para>
            </summary>
        </member>
        <member name="P:Capoala.CmdLine.CommandLineArgumentBase.Description">
            <summary>
            A description of what this argument represents or does within the scope of the application.
            </summary>
        </member>
        <member name="M:Capoala.CmdLine.CommandLineArgumentBase.#ctor(System.String,Capoala.CmdLine.ICommandLineSpecification,System.String)">
            <summary>
            Creates new instance of <see cref="T:Capoala.CmdLine.CommandLineArgumentBase"/>.
            </summary>
            <param name="command">The command - switch - value used at the command line.</param>
            <param name="specification">The <see cref="T:Capoala.CmdLine.ICommandLineSpecification"/> used to define this argument's characteristics.</param>
            <param name="description">A description of what this argument represents or does within the scope of the application.</param>
            <exception cref="T:System.ArgumentNullException">
            Throws when <paramref name="command"/> is null, empty, or only whitespace.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Throws when <paramref name="specification"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            Throws when an object pairing with the same values as <paramref name="command"/> and <paramref name="specification"/> have already been declared.
            </exception>
        </member>
        <member name="M:Capoala.CmdLine.CommandLineArgumentBase.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>
            Returns true if the specified object is equal to the current object; otherwise, false.
            </returns>
        </member>
        <member name="M:Capoala.CmdLine.CommandLineArgumentBase.Equals(Capoala.CmdLine.CommandLineArgumentBase)">
            <summary>
            Determines whether this instance and another specified <see cref="T:Capoala.CmdLine.CommandLineArgumentBase"/> object have the same value.
            </summary>
            <param name="other">The <see cref="T:Capoala.CmdLine.CommandLineArgumentBase"/> to compare to this instance.</param>
            <returns>
            Returns true if the value of the value parameter is the same as the value of this instance; otherwise, false. 
            If value is null, the method returns false.
            </returns>
        </member>
        <member name="M:Capoala.CmdLine.CommandLineArgumentBase.GetHashCode">
            <summary>
            Returns the hash code for this <see cref="T:Capoala.CmdLine.CommandLineArgumentBase"/>.
            </summary>
            <returns>
            Returns a 32-bit signed integer hash code.
            </returns>
        </member>
        <member name="M:Capoala.CmdLine.CommandLineArgumentBase.op_Equality(Capoala.CmdLine.CommandLineArgumentBase,Capoala.CmdLine.CommandLineArgumentBase)">
            <summary>
            Determines whether two specified <see cref="T:Capoala.CmdLine.CommandLineArgumentBase"/> objects have the same value.
            </summary>
            <param name="base1">The first <see cref="T:Capoala.CmdLine.CommandLineArgumentBase"/> to compare, or null.</param>
            <param name="base2">The second <see cref="T:Capoala.CmdLine.CommandLineArgumentBase"/> to compare, or null.</param>
            <returns>
            Returns true if the value of <paramref name="base1"/> is the same as the value of <paramref name="base2"/>; otherwise, false.
            </returns>
        </member>
        <member name="M:Capoala.CmdLine.CommandLineArgumentBase.op_Inequality(Capoala.CmdLine.CommandLineArgumentBase,Capoala.CmdLine.CommandLineArgumentBase)">
            <summary>
            Determines whether two specified <see cref="T:Capoala.CmdLine.CommandLineArgumentBase"/> objects have different values.
            </summary>
            <param name="base1">The first <see cref="T:Capoala.CmdLine.CommandLineArgumentBase"/> to compare, or null.</param>
            <param name="base2">The second <see cref="T:Capoala.CmdLine.CommandLineArgumentBase"/> to compare, or null.</param>
            <returns>
            Returns true if the value of <paramref name="base1"/> is different from the value of <paramref name="base2"/>; otherwise, false.
            </returns>
        </member>
        <member name="T:Capoala.CmdLine.CommandLineGroupingBase">
            <summary>
            The base implementation of <see cref="T:Capoala.CmdLine.ICommandLineGrouping"/>. This class can only be inherited.
            </summary>
        </member>
        <member name="P:Capoala.CmdLine.CommandLineGroupingBase.ParentCallChain">
            <summary>
            The parent call-chain.
            </summary>
        </member>
        <member name="P:Capoala.CmdLine.CommandLineGroupingBase.Children">
            <summary>
            The associated children in relation to <see cref="P:Capoala.CmdLine.CommandLineGroupingBase.ParentCallChain"/>.
            </summary>
        </member>
        <member name="P:Capoala.CmdLine.CommandLineGroupingBase.Description">
            <summary>
            A description of what this grouping represents or does within the scope of the application.
            </summary>
        </member>
        <member name="M:Capoala.CmdLine.CommandLineGroupingBase.#ctor(Capoala.CmdLine.ICommandLineArgument,Capoala.CmdLine.ICommandLineArgument[],System.String)">
            <summary>
            Creates new instance of <see cref="T:Capoala.CmdLine.CommandLineGroupingBase"/>.
            <para>
            *See remarks for further details and correct implementation.
            </para>
            </summary>
            <param name="parentCallChain">The parent call-chain.</param>
            <param name="children">The associated children in relation to <paramref name="parentCallChain"/>.</param>
            <param name="description">A description of what this grouping represents or does within the scope of the application.</param>
            <exception cref="T:System.ArgumentNullException">
            Throws when <paramref name="parentCallChain"/> is null or contains not elements.
            </exception>
            <remarks>
            The <see cref="P:Capoala.CmdLine.ICommandLineGrouping.ParentCallChain"/> property represents the full parent hierarchy chain. 
            
            The <see cref="P:Capoala.CmdLine.ICommandLineGrouping.Children"/> property represents associated child pairings. 
            It is important to note this property is not an "all inclusive" listing", but rather an individual grouping. 
            This means that if you have one "main argument", which has three "child arguments", then specifying a grouping
            with "main" and "childOne" would transpose to the command line as "$ main childOne". 
            
            If you wanted to specify a grouping that states "main" must run with "childOne" and "childTwo", but leave "childThree" as optional, 
            then you would create two groupings; one with "childOne" and "childTwo"; the other, with "childOne", "childTwo", and "childThree".
            </remarks>
        </member>
        <member name="M:Capoala.CmdLine.CommandLineGroupingBase.#ctor(Capoala.CmdLine.ICommandLineArgument[],Capoala.CmdLine.ICommandLineArgument[],System.String)">
            <summary>
            Creates new instance of <see cref="T:Capoala.CmdLine.CommandLineGroupingBase"/>.
            <para>
            *See remarks for further details and correct implementation.
            </para>
            </summary>
            <param name="parentCallChain">The parent call-chain.</param>
            <param name="children">The associated children in relation to <paramref name="parentCallChain"/>.</param>
            <param name="description">A description of what this grouping represents or does within the scope of the application.</param>
            <exception cref="T:System.ArgumentNullException">
            Throws when <paramref name="parentCallChain"/> is null or contains not elements.
            </exception>
            <remarks>
            The <see cref="P:Capoala.CmdLine.ICommandLineGrouping.ParentCallChain"/> property represents the full parent hierarchy chain. 
            
            The <see cref="P:Capoala.CmdLine.ICommandLineGrouping.Children"/> property represents associated child pairings. 
            It is important to note this property is not an "all inclusive" listing", but rather an individual grouping. 
            This means that if you have one "main argument", which has three "child arguments", then specifying a grouping
            with "main" and "childOne" would transpose to the command line as "$ main childOne". 
            
            If you wanted to specify a grouping that states "main" must run with "childOne" and "childTwo", but leave "childThree" as optional, 
            then you would create two groupings; one with "childOne" and "childTwo"; the other, with "childOne", "childTwo", and "childThree".
            </remarks>
        </member>
        <member name="M:Capoala.CmdLine.CommandLineGroupingBase.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>
            Returns true if the specified object is equal to the current object; otherwise, false.
            </returns>
        </member>
        <member name="M:Capoala.CmdLine.CommandLineGroupingBase.Equals(Capoala.CmdLine.CommandLineGroupingBase)">
            <summary>
            Determines whether this instance and another specified <see cref="T:Capoala.CmdLine.CommandLineGroupingBase"/> object have the same value.
            </summary>
            <param name="other">The <see cref="T:Capoala.CmdLine.CommandLineGroupingBase"/> to compare to this instance.</param>
            <returns>
            Returns true if the value of the value parameter is the same as the value of this instance; otherwise, false. 
            If value is null, the method returns false.
            </returns>
        </member>
        <member name="M:Capoala.CmdLine.CommandLineGroupingBase.GetHashCode">
            <summary>
            Returns the hash code for this <see cref="T:Capoala.CmdLine.CommandLineGroupingBase"/>.
            </summary>
            <returns>
            Returns a 32-bit signed integer hash code.
            </returns>
        </member>
        <member name="M:Capoala.CmdLine.CommandLineGroupingBase.op_Equality(Capoala.CmdLine.CommandLineGroupingBase,Capoala.CmdLine.CommandLineGroupingBase)">
            <summary>
            Determines whether two specified <see cref="T:Capoala.CmdLine.CommandLineGroupingBase"/> objects have the same value.
            </summary>
            <param name="base1">The first <see cref="T:Capoala.CmdLine.CommandLineGroupingBase"/> to compare, or null.</param>
            <param name="base2">The second <see cref="T:Capoala.CmdLine.CommandLineGroupingBase"/> to compare, or null.</param>
            <returns>
            Returns true if the value of <paramref name="base1"/> is the same as the value of <paramref name="base2"/>; otherwise, false.
            </returns>
        </member>
        <member name="M:Capoala.CmdLine.CommandLineGroupingBase.op_Inequality(Capoala.CmdLine.CommandLineGroupingBase,Capoala.CmdLine.CommandLineGroupingBase)">
            <summary>
            Determines whether two specified <see cref="T:Capoala.CmdLine.CommandLineGroupingBase"/> objects have different values.
            </summary>
            <param name="base1">The first <see cref="T:Capoala.CmdLine.CommandLineGroupingBase"/> to compare, or null.</param>
            <param name="base2">The second <see cref="T:Capoala.CmdLine.CommandLineGroupingBase"/> to compare, or null.</param>
            <returns>
            Returns true if the value of <paramref name="base1"/> is different from the value of <paramref name="base2"/>; otherwise, false.
            </returns>
        </member>
        <member name="T:Capoala.CmdLine.CommandLineRestrictionBase`1">
            <summary>
            The base implementation of <see cref="T:Capoala.CmdLine.ICommandLineRestriction`1"/>. This class can only be inherited.
            </summary>
            <typeparam name="TViolationResult">The object type to return should a violation occur.</typeparam>
        </member>
        <member name="P:Capoala.CmdLine.CommandLineRestrictionBase`1.IsViolated">
            <summary>
            Determines if a violation has occurred.
            </summary>
        </member>
        <member name="M:Capoala.CmdLine.CommandLineRestrictionBase`1.GetViolations">
            <summary>
            Performs all necessary queries to determine whether any violations were found, returning all violation objects as <typeparamref name="TViolationResult"/>.
            </summary>
            <returns>
            Returns a collection of <typeparamref name="TViolationResult"/> representing the violations, if any violations where found.
            Returns an empty collection if no violations were found.
            </returns>
        </member>
        <member name="M:Capoala.CmdLine.CommandLineRestrictionBase`1.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>
            Returns true if the specified object is equal to the current object; otherwise, false.
            </returns>
        </member>
        <member name="M:Capoala.CmdLine.CommandLineRestrictionBase`1.Equals(Capoala.CmdLine.CommandLineRestrictionBase{`0})">
            <summary>
            Determines whether this instance and another specified <see cref="T:Capoala.CmdLine.CommandLineSpecificationBase"/> object have the same value.
            </summary>
            <param name="other">The <see cref="T:Capoala.CmdLine.CommandLineRestrictionBase`1"/> to compare to this instance.</param>
            <returns>
            Returns true if the value of the value parameter is the same as the value of this instance; otherwise, false. 
            If value is null, the method returns false.
            </returns>
        </member>
        <member name="M:Capoala.CmdLine.CommandLineRestrictionBase`1.GetHashCode">
            <summary>
            Returns the hash code for this <see cref="T:Capoala.CmdLine.CommandLineRestrictionBase`1"/>.
            </summary>
            <returns>
            Returns a 32-bit signed integer hash code.
            </returns>
        </member>
        <member name="M:Capoala.CmdLine.CommandLineRestrictionBase`1.op_Equality(Capoala.CmdLine.CommandLineRestrictionBase{`0},Capoala.CmdLine.CommandLineRestrictionBase{`0})">
            <summary>
            Determines whether two specified <see cref="T:Capoala.CmdLine.CommandLineRestrictionBase`1"/> objects have the same value.
            </summary>
            <param name="base1">The first <see cref="T:Capoala.CmdLine.CommandLineRestrictionBase`1"/> to compare, or null.</param>
            <param name="base2">The second <see cref="T:Capoala.CmdLine.CommandLineRestrictionBase`1"/> to compare, or null.</param>
            <returns>
            Returns true if the value of <paramref name="base1"/> is the same as the value of <paramref name="base2"/>; otherwise, false.
            </returns>
        </member>
        <member name="M:Capoala.CmdLine.CommandLineRestrictionBase`1.op_Inequality(Capoala.CmdLine.CommandLineRestrictionBase{`0},Capoala.CmdLine.CommandLineRestrictionBase{`0})">
            <summary>
            Determines whether two specified <see cref="T:Capoala.CmdLine.CommandLineRestrictionBase`1"/> objects have different values.
            </summary>
            <param name="base1">The first <see cref="T:Capoala.CmdLine.CommandLineRestrictionBase`1"/> to compare, or null.</param>
            <param name="base2">The second <see cref="T:Capoala.CmdLine.CommandLineRestrictionBase`1"/> to compare, or null.</param>
            <returns>
            Returns true if the value of <paramref name="base1"/> is different from the value of <paramref name="base2"/>; otherwise, false.
            </returns>
        </member>
        <member name="T:Capoala.CmdLine.CommandLine">
            <summary>
            Provides the means to create, retrieve, and configure command line arguments. This class cannot be inherited.
            </summary>
        </member>
        <member name="P:Capoala.CmdLine.CommandLine.Comparer">
            <summary>
            Specifies how arguments are compared to one another.
            </summary>
        </member>
        <member name="P:Capoala.CmdLine.CommandLine.Arguments">
            <summary>
            Returns the received command line arguments, minus the path to the executing application.
            </summary>
        </member>
        <member name="P:Capoala.CmdLine.CommandLine.ArgumentsString">
            <summary>
            Returns the received command line arguments as a <see cref="T:System.String"/>, minus the path to the executing application.
            </summary>
        </member>
        <member name="P:Capoala.CmdLine.CommandLine.KnownSpecifications">
            <summary>
            A collection of instatiated <see cref="T:Capoala.CmdLine.ICommandLineSpecification"/> objects.
            </summary>
        </member>
        <member name="P:Capoala.CmdLine.CommandLine.KnownArguments">
            <summary>
            A collection of instatiated <see cref="T:Capoala.CmdLine.ICommandLineArgument"/> objects.
            </summary>
        </member>
        <member name="P:Capoala.CmdLine.CommandLine.RootSpecification">
            <summary>
            The root <see cref="T:Capoala.CmdLine.ICommandLineSpecification"/>.
            <para>
            The root is defined as the object with the lowest <see cref="P:Capoala.CmdLine.ICommandLineSpecification.Hierarchy"/> value.
            </para>
            </summary>
        </member>
        <member name="M:Capoala.CmdLine.CommandLine.GetSegment(Capoala.CmdLine.ICommandLineArgument,System.Nullable{System.StringComparison},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Returns a collection of values starting at <paramref name="argument"/>, and ending at the next value that begins 
            with the first character of <paramref name="argument"/>.
            </summary>
            <param name="argument">The argument to search for.</param>
            <param name="comparer">The comparer to use when determining if a match was found.</param>
            <param name="argumentsToParse">
            The collection to search. 
            Specifying null will default to <see cref="P:Capoala.CmdLine.CommandLine.Arguments"/>.
            </param>
            <returns>
            Returns all child <see cref="P:Capoala.CmdLine.ICommandLineArgument.Command"/> and parameters based upon the 
            <see cref="T:Capoala.CmdLine.ICommandLineSpecification"/> if <paramref name="argument"/> is found.
            Returns an empty collection if <paramref name="argument"/> is not found.
            </returns>
            <remarks>
            This method searches <paramref name="argumentsToParse"/> for a value that matches <paramref name="argument"/> 
            using the <see cref="P:Capoala.CmdLine.CommandLine.Comparer"/> value.
            Once found, that value and all proceeding values are returned until a value whose first character matches that 
            of the <paramref name="argument"/>'s delimiter.
            
            If <paramref name="argumentsToParse"/> is null, <see cref="P:Capoala.CmdLine.CommandLine.Arguments"/> is used.
            
            If no matches to <paramref name="argument"/> are found, an empty collection is returned.
            </remarks>
        </member>
        <member name="M:Capoala.CmdLine.CommandLine.GetSegment(System.Collections.Generic.IEnumerable{Capoala.CmdLine.ICommandLineArgument},System.Nullable{System.StringComparison},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Returns a collection of child arguments and parameters of the given call-chain.
            </summary>
            <param name="callChain">The call-chain.</param>
            <param name="comparer">The comparer to use when determining if a match was found.</param>
            <param name="argumentsToParse">
            The collection to search. 
            Specifying null will default to <see cref="P:Capoala.CmdLine.CommandLine.Arguments"/>.
            </param>
            <returns>
            Returns all child <see cref="P:Capoala.CmdLine.ICommandLineArgument.Command"/> and parameters based upon the 
            <see cref="T:Capoala.CmdLine.ICommandLineSpecification"/> if <paramref name="callChain"/> is found.
            Returns an empty collection if <paramref name="callChain"/> is not found.
            </returns>
            <remarks>
            This method searches <paramref name="argumentsToParse"/> for a value that matches <paramref name="callChain"/> 
            using the <see cref="P:Capoala.CmdLine.CommandLine.Comparer"/> value.
            Once found, that value and all proceeding values are returned until a value whose first character matches that 
            of the <paramref name="callChain"/>'s last argument's delimiter.
            
            If <paramref name="argumentsToParse"/> is null, <see cref="P:Capoala.CmdLine.CommandLine.Arguments"/> is used.
            
            If no matches to <paramref name="callChain"/> are found, an empty collection is returned.
            </remarks>
        </member>
        <member name="M:Capoala.CmdLine.CommandLine.GetSegment(Capoala.CmdLine.ICommandLineGrouping,System.Nullable{System.StringComparison},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Returns a collection of child arguments and parameters of the given grouping.
            </summary>
            <param name="grouping">The grouping.</param>
            <param name="comparer">The comparer to use when determining if a match was found.</param>
            <param name="argumentsToParse">
            The collection to search. 
            Specifying null will default to <see cref="P:Capoala.CmdLine.CommandLine.Arguments"/>.
            </param>
            <returns>
            Returns all child <see cref="P:Capoala.CmdLine.ICommandLineArgument.Command"/> and parameters based upon the 
            <see cref="T:Capoala.CmdLine.ICommandLineSpecification"/> if <paramref name="grouping"/> is found.
            Returns an empty collection if <paramref name="grouping"/> is not found.
            </returns>
            <remarks>
            This method searches <paramref name="argumentsToParse"/> for a value that matches <paramref name="grouping"/> 
            using the <see cref="P:Capoala.CmdLine.CommandLine.Comparer"/> value.
            Once found, that value and all proceeding values are returned until a value whose first character matches that 
            of the <paramref name="grouping"/>'s last argument's delimiter.
            
            If <paramref name="argumentsToParse"/> is null, <see cref="P:Capoala.CmdLine.CommandLine.Arguments"/> is used.
            
            If no matches to <paramref name="grouping"/> are found, an empty collection is returned.
            </remarks>
        </member>
        <member name="M:Capoala.CmdLine.CommandLine.GetParams(Capoala.CmdLine.ICommandLineArgument,System.Nullable{System.StringComparison},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Returns all parameters associated with the specified <see cref="T:Capoala.CmdLine.ICommandLineArgument"/>.
            </summary>
            <param name="argument">The argument to retrieve the parameters of.</param>
            <param name="comparer">The comparer to use when determining if a match was found.</param>
            <param name="argumentsToParse">
            The collection to search. 
            Specifying null will default to <see cref="P:Capoala.CmdLine.CommandLine.Arguments"/>.
            </param>
            <returns>
            Searches <paramref name="argumentsToParse"/> for <paramref name="argument"/>. 
            Once found, proceeding values are returned until a value begins with a known <see cref="P:Capoala.CmdLine.ICommandLineSpecification.Delimiter"/>.
            
            If <paramref name="argument"/> is not found, or no parameters are found, an empty collection is returned.
            </returns>
        </member>
        <member name="M:Capoala.CmdLine.CommandLine.GetParams(System.Collections.Generic.IEnumerable{Capoala.CmdLine.ICommandLineArgument},System.Nullable{System.StringComparison},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Returns all parameters associated with the specified call-chain.
            </summary>
            <param name="callChain">The call-chain to retrieve the parameters of.</param>
            <param name="comparer">The comparer to use when determining if a match was found.</param>
            <param name="argumentsToParse">
            The collection to search. 
            Specifying null will default to <see cref="P:Capoala.CmdLine.CommandLine.Arguments"/>.
            </param>
            <returns>
            Searches <paramref name="argumentsToParse"/> for <paramref name="callChain"/>. 
            Once found, proceeding values are returned until a value begins with a known <see cref="P:Capoala.CmdLine.ICommandLineSpecification.Delimiter"/>.
            
            If <paramref name="callChain"/> is not found, or no parameters are found, an empty collection is returned.
            </returns>
        </member>
        <member name="M:Capoala.CmdLine.CommandLine.GetParams(Capoala.CmdLine.ICommandLineGrouping,System.Nullable{System.StringComparison},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Returns all parameters associated with the specified grouping.
            </summary>
            <param name="grouping">The grouping to retrieve the parameters of.</param>
            <param name="comparer">The comparer to use when determining if a match was found.</param>
            <param name="argumentsToParse">
            The collection to search. 
            Specifying null will default to <see cref="P:Capoala.CmdLine.CommandLine.Arguments"/>.
            </param>
            <returns>
            Searches <paramref name="argumentsToParse"/> for <paramref name="grouping"/>. 
            Once found, proceeding values are returned until a value begins with a known <see cref="P:Capoala.CmdLine.ICommandLineSpecification.Delimiter"/>.
            
            If <paramref name="grouping"/> is not found, or no parameters are found, an empty collection is returned.
            </returns>
        </member>
        <member name="M:Capoala.CmdLine.CommandLine.ExcludeParams(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{Capoala.CmdLine.ICommandLineSpecification})">
            <summary>
            Returns the given collection, minus parameters.
            </summary>
            <param name="segment">The collection of arguments.</param>
            <param name="knownSpecifications">The collection of known specifications.</param>
            <returns>
            Returns the given collection, minus any values that do not begin with any 
            known <see cref="T:Capoala.CmdLine.ICommandLineSpecification"/> delimiters.
            </returns>
        </member>
        <member name="M:Capoala.CmdLine.CommandLine.ExcludeParams(System.Collections.Generic.IEnumerable{Capoala.CmdLine.ICommandLineArgument},System.Collections.Generic.IEnumerable{Capoala.CmdLine.ICommandLineSpecification})">
            <summary>
            Returns the given collection, minus parameters.
            </summary>
            <param name="segment">The collection of arguments.</param>
            <param name="knownSpecifications">The collection of known specifications.</param>
            <returns>
            Returns the given collection, minus any values that do not begin with any 
            known <see cref="T:Capoala.CmdLine.ICommandLineSpecification"/> delimiters.
            </returns>
        </member>
        <member name="M:Capoala.CmdLine.CommandLine.Found(Capoala.CmdLine.ICommandLineArgument,Capoala.CmdLine.CmdLineSearchOptions,System.Nullable{System.StringComparison},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Determines if the specified argument is present.
            </summary>
            <param name="rootArgument">The <see cref="T:Capoala.CmdLine.ICommandLineArgument"/> to check.</param>
            <param name="options">The flags which dictate what determines an argument as found.</param>
            <param name="comparer">The comparer to use when determining if a match was found.</param>
            <param name="argumentsToParse">
            The collection to search. 
            Specifying null will default to <see cref="P:Capoala.CmdLine.CommandLine.Arguments"/>.
            </param>
            <returns>
            Returns true if the apecified argument was found using the supplied flags; otherwise, returns false.
            </returns>
            <exception cref="T:System.ArgumentException">
            Throws when an invalid flag combination is given.
            </exception>
        </member>
        <member name="M:Capoala.CmdLine.CommandLine.Found(System.Collections.Generic.IEnumerable{Capoala.CmdLine.ICommandLineArgument},Capoala.CmdLine.CmdLineSearchOptions,System.Nullable{System.StringComparison},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Determines if the specified call-chain is present.
            </summary>
            <param name="callChain">The call-chain to check.</param>
            <param name="options">The flags which dictate what determines an argument as found.</param>
            <param name="comparer">The comparer to use when determining if a match was found.</param>
            <param name="argumentsToParse">
            The collection to search. 
            Specifying null will default to <see cref="P:Capoala.CmdLine.CommandLine.Arguments"/>.
            </param>
            <returns>
            Returns true if the apecified argument was found using the supplied flags; otherwise, returns false.
            </returns>
            <exception cref="T:System.ArgumentException">
            Throws when an invalid flag combination is given.
            </exception>
        </member>
        <member name="M:Capoala.CmdLine.CommandLine.Found(Capoala.CmdLine.ICommandLineGrouping,Capoala.CmdLine.CmdLineSearchOptions,System.Nullable{System.StringComparison},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Determines if the specified grouping is present.
            </summary>
            <param name="grouping">The grouping to check.</param>
            <param name="options">The flags which dictate what determines an argument as found.</param>
            <param name="comparer">The comparer to use when determining if a match was found.</param>
            <param name="argumentsToParse">
            The collection to search. 
            Specifying null will default to <see cref="P:Capoala.CmdLine.CommandLine.Arguments"/>.
            </param>
            <returns>
            Returns true if the apecified argument was found using the supplied flags; otherwise, returns false.
            </returns>
            <exception cref="T:System.ArgumentException">
            Throws when an invalid flag combination is given.
            </exception>
        </member>
        <member name="T:Capoala.CmdLine.CommandLineSpecification">
            <summary>
            <![CDATA[default]]> implementation of <see cref="T:Capoala.CmdLine.ICommandLineSpecification"/>. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:Capoala.CmdLine.CommandLineSpecification.#ctor(System.Int32,System.String)">
            <summary>
            Creates new instance of <see cref="T:Capoala.CmdLine.CommandLineSpecification"/>.
            </summary>
            <param name="hierarchy">The hierarchal position in a parent-child relationship.</param>
            <param name="delimiter">The delimiter used for a command (switch).</param>
            <exception cref="T:System.ArgumentException">
            Throws when <paramref name="delimiter"/> is null or empty or contains an alpha-numeric character.
            </exception>
            <exception cref="T:System.ArgumentException">
            Throws when <paramref name="hierarchy"/> or <paramref name="delimiter"/> has already been declared.
            </exception>
        </member>
        <member name="T:Capoala.CmdLine.CommandLineArgument">
            <summary>
            A default implementation of <see cref="T:Capoala.CmdLine.ICommandLineArgument"/>. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:Capoala.CmdLine.CommandLineArgument.#ctor(System.String,Capoala.CmdLine.ICommandLineSpecification,System.String)">
            <summary>
            Creates new instance of <see cref="T:Capoala.CmdLine.CommandLineArgument"/>.
            </summary>
            <param name="command">The command - switch - value used at the command line.</param>
            <param name="specification">The <see cref="T:Capoala.CmdLine.ICommandLineSpecification"/> used to define this argument's characteristics.</param>
            <param name="description">A description of what this argument represents or does within the scope of the application.</param>
            <exception cref="T:System.ArgumentNullException">
            Throws when <paramref name="command"/> is null, empty, or only whitespace.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Throws when <paramref name="specification"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            Throws when an object pairing with the same values as <paramref name="command"/> and <paramref name="specification"/> have already been declared.
            </exception>
        </member>
        <member name="T:Capoala.CmdLine.CommandLineGrouping">
            <summary>
            A default implementation of <see cref="T:Capoala.CmdLine.ICommandLineGrouping"/>. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:Capoala.CmdLine.CommandLineGrouping.#ctor(Capoala.CmdLine.ICommandLineArgument,Capoala.CmdLine.ICommandLineArgument[],System.String)">
            <summary>
            Creates new instance of <see cref="T:Capoala.CmdLine.CommandLineGrouping"/>.
            <para>
            *See remarks for further details and correct implementation.
            </para>
            </summary>
            <param name="parentCallChain">The parent call-chain.</param>
            <param name="children">The associated children in relation to <paramref name="parentCallChain"/>.</param>
            <param name="description">A description of what this grouping represents or does within the scope of the application.</param>
            <exception cref="T:System.ArgumentNullException">
            Throws when <paramref name="parentCallChain"/> is null or contains not elements.
            </exception>
            <remarks>
            The <see cref="P:Capoala.CmdLine.ICommandLineGrouping.ParentCallChain"/> property represents the full parent hierarchy chain. 
            
            The <see cref="P:Capoala.CmdLine.ICommandLineGrouping.Children"/> property represents associated child pairings. 
            It is important to note this property is not an "all inclusive" listing", but rather an individual grouping. 
            This means that if you have one "main argument", which has three "child arguments", then specifying a grouping
            with "main" and "childOne" would transpose to the command line as "$ main childOne". 
            
            If you wanted to specify a grouping that states "main" must run with "childOne" and "childTwo", but leave "childThree" as optional, 
            then you would create two groupings; one with "childOne" and "childTwo"; the other, with "childOne", "childTwo", and "childThree".
            </remarks>
        </member>
        <member name="M:Capoala.CmdLine.CommandLineGrouping.#ctor(Capoala.CmdLine.ICommandLineArgument[],Capoala.CmdLine.ICommandLineArgument[],System.String)">
            <summary>
            Creates new instance of <see cref="T:Capoala.CmdLine.CommandLineGrouping"/>.
            <para>
            *See remarks for further details and correct implementation.
            </para>
            </summary>
            <param name="parentCallChain">The parent call-chain.</param>
            <param name="children">The associated children in relation to <paramref name="parentCallChain"/>.</param>
            <param name="description">A description of what this grouping represents or does within the scope of the application.</param>
            <exception cref="T:System.ArgumentNullException">
            Throws when <paramref name="parentCallChain"/> is null or contains not elements.
            </exception>
            <remarks>
            The <see cref="P:Capoala.CmdLine.ICommandLineGrouping.ParentCallChain"/> property represents the full parent hierarchy chain. 
            
            The <see cref="P:Capoala.CmdLine.ICommandLineGrouping.Children"/> property represents associated child pairings. 
            It is important to note this property is not an "all inclusive" listing", but rather an individual grouping. 
            This means that if you have one "main argument", which has three "child arguments", then specifying a grouping
            with "main" and "childOne" would transpose to the command line as "$ main childOne". 
            
            If you wanted to specify a grouping that states "main" must run with "childOne" and "childTwo", but leave "childThree" as optional, 
            then you would create two groupings; one with "childOne" and "childTwo"; the other, with "childOne", "childTwo", and "childThree".
            </remarks>
        </member>
        <member name="T:Capoala.CmdLine.CmdLineSearchOptions">
            <summary>
            Determines how a match is found when determining if an argument or call-chain is found.
            </summary>
        </member>
        <member name="F:Capoala.CmdLine.CmdLineSearchOptions.None">
            <summary>
            True if the argument or call-chain is present.
            </summary>
        </member>
        <member name="F:Capoala.CmdLine.CmdLineSearchOptions.WithChildren">
            <summary>
            True if the argument or call-chain is present and contains at least one child.
            </summary>
        </member>
        <member name="F:Capoala.CmdLine.CmdLineSearchOptions.WithoutChildren">
            <summary>
            True if the argument or call-chain is present and does not contain any children.
            </summary>
        </member>
        <member name="F:Capoala.CmdLine.CmdLineSearchOptions.WithSiblings">
            <summary>
            True if the argument or call-chain is present and contains siblings.
            </summary>
        </member>
        <member name="F:Capoala.CmdLine.CmdLineSearchOptions.WithoutSiblings">
            <summary>
            True if the argument or call-chain is present and does not contain any siblings.
            </summary>
        </member>
        <member name="F:Capoala.CmdLine.CmdLineSearchOptions.WithParams">
            <summary>
            True if the argument or call-chain is present and contains parameters.
            </summary>
        </member>
        <member name="F:Capoala.CmdLine.CmdLineSearchOptions.WithoutParams">
            <summary>
            True if the argument or call-chain is present and does not contain paramters.
            </summary>
        </member>
        <member name="T:Capoala.CmdLine.ICommandLineSpecification">
            <summary>
            Represents the characteristics of a command line argument.
            </summary>
            <remarks>
            The <see cref="T:Capoala.CmdLine.ICommandLineSpecification"/> interface defines the characteristics of a command line argument, such as its delimiter and hierarchal order.
            </remarks>
        </member>
        <member name="P:Capoala.CmdLine.ICommandLineSpecification.Hierarchy">
            <summary>
            Represents the hierarchal position in a parent-child relationship.
            Lower numbers represent a parent to a higher numbered child.
            </summary>
        </member>
        <member name="P:Capoala.CmdLine.ICommandLineSpecification.Delimiter">
            <summary>
            Represent the delimiter used for a command (switch).
            </summary>
        </member>
        <member name="T:Capoala.CmdLine.ICommandLineArgument">
            <summary>
            Represents a command line argument.
            </summary>
        </member>
        <member name="P:Capoala.CmdLine.ICommandLineArgument.Specification">
            <summary>
            The <see cref="T:Capoala.CmdLine.ICommandLineSpecification"/> used to define this argument's characteristics.
            </summary>
        </member>
        <member name="P:Capoala.CmdLine.ICommandLineArgument.Command">
            <summary>
            The command - switch - value used at the command line.
            <para>
            This property will always return the associated <see cref="P:Capoala.CmdLine.ICommandLineSpecification.Delimiter"/>.
            </para>
            </summary>
        </member>
        <member name="P:Capoala.CmdLine.ICommandLineArgument.Description">
            <summary>
            A description of what this argument represents or does within the scope of the application.
            </summary>
        </member>
        <member name="T:Capoala.CmdLine.ICommandLineGrouping">
            <summary>
            Represents a paired grouping between a parent chain and its associated child arguments.
            <para>
            *See remarks for further details and correct implementation.
            </para>
            </summary>
            <remarks>
            The <see cref="P:Capoala.CmdLine.ICommandLineGrouping.ParentCallChain"/> property represents the full parent hierarchy chain. 
            
            The <see cref="P:Capoala.CmdLine.ICommandLineGrouping.Children"/> property represents associated child pairings. 
            
            It is important to note this property is not an "all inclusive" listing", but rather an individual grouping. 
            </remarks>
            <example>
            If you have one "main argument", which has three "child arguments", then specifying a grouping
            with "main" and "childOne" would transpose to the command line as "$ main childOne". 
            
            If you wanted to specify a grouping that states "main" must run with "childOne" and "childTwo", but leave "childThree" as optional, 
            then you would create two groupings; one with "childOne" and "childTwo"; the other, with "childOne", "childTwo", and "childThree".
            </example>
        </member>
        <member name="P:Capoala.CmdLine.ICommandLineGrouping.ParentCallChain">
            <summary>
            The parent call-chain.
            </summary>
        </member>
        <member name="P:Capoala.CmdLine.ICommandLineGrouping.Children">
            <summary>
            The associated children in relation to the <see cref="P:Capoala.CmdLine.ICommandLineGrouping.ParentCallChain"/>.
            </summary>
        </member>
        <member name="P:Capoala.CmdLine.ICommandLineGrouping.Description">
            <summary>
            A description of what this grouping represents or does within the scope of the application.
            </summary>
        </member>
        <member name="T:Capoala.CmdLine.ICommandLineRestriction`1">
            <summary>
            Represents a command line restriction.
            </summary>
            <typeparam name="TViolationResult">The object type to return should a violation occur.</typeparam>
        </member>
        <member name="P:Capoala.CmdLine.ICommandLineRestriction`1.IsViolated">
            <summary>
            Determines if a violation has occurred.
            </summary>
        </member>
        <member name="M:Capoala.CmdLine.ICommandLineRestriction`1.GetViolations">
            <summary>
            Performs all necessary queries to determine whether any violations were found, 
            returning all violation objects as <typeparamref name="TViolationResult"/>.
            </summary>
            <returns>
            Returns a collection of <typeparamref name="TViolationResult"/> representing the violations, if any violations where found.
            Returns an empty collection if no violations were found.
            </returns>
        </member>
        <member name="T:Capoala.CmdLine.CommandLineRestrictions">
            <summary>
            Contains default, common, <see cref="T:Capoala.CmdLine.ICommandLineRestriction`1"/> implementations.
            </summary>
        </member>
        <member name="T:Capoala.CmdLine.CommandLineRestrictions.LegalArgumentsRestriction">
            <summary>
            A restriction which specifies legal arguments.
            </summary>
        </member>
        <member name="P:Capoala.CmdLine.CommandLineRestrictions.LegalArgumentsRestriction.LegalCombinations">
            <summary>
            A collection of <see cref="T:Capoala.CmdLine.ICommandLineGrouping"/> representing legal call-chains and associated child <see cref="T:Capoala.CmdLine.ICommandLineArgument"/>.
            </summary>
        </member>
        <member name="P:Capoala.CmdLine.CommandLineRestrictions.LegalArgumentsRestriction.KnownArguments">
            <summary>
            A collection of all known <see cref="T:Capoala.CmdLine.ICommandLineArgument"/>.
            </summary>
        </member>
        <member name="P:Capoala.CmdLine.CommandLineRestrictions.LegalArgumentsRestriction.KnownSpecifications">
            <summary>
            A collection of all known <see cref="T:Capoala.CmdLine.ICommandLineSpecification"/>.
            </summary>
        </member>
        <member name="P:Capoala.CmdLine.CommandLineRestrictions.LegalArgumentsRestriction.RootSpecification">
            <summary>
            The root specification.
            </summary>
        </member>
        <member name="M:Capoala.CmdLine.CommandLineRestrictions.LegalArgumentsRestriction.#ctor(System.Collections.Generic.IEnumerable{Capoala.CmdLine.ICommandLineArgument},System.Collections.Generic.IEnumerable{Capoala.CmdLine.ICommandLineSpecification},Capoala.CmdLine.ICommandLineGrouping[])">
            <summary>
            Creates a new instance of <see cref="T:Capoala.CmdLine.CommandLineRestrictions.LegalArgumentsRestriction"/>.
            </summary>
            <param name="knownArguments">A collection of all known <see cref="T:Capoala.CmdLine.ICommandLineArgument"/>.</param>
            <param name="knownSpecifications">A collection of all known <see cref="T:Capoala.CmdLine.ICommandLineSpecification"/>.</param>
            <param name="legalCombinations">A collection of <see cref="T:Capoala.CmdLine.ICommandLineGrouping"/> representing legal call-chains and associated child <see cref="T:Capoala.CmdLine.ICommandLineArgument"/>.</param>
        </member>
        <member name="M:Capoala.CmdLine.CommandLineRestrictions.LegalArgumentsRestriction.GetViolations">
            <summary>
            Performs all necessary queries to determine whether any violations were found, returning all violation objects as <see cref="T:Capoala.CmdLine.CommandLineViolation"/>.
            </summary>
            <returns>
            Returns a collection of <see cref="T:Capoala.CmdLine.CommandLineViolation"/> representing the violations, if any violations where found.
            Returns an empty collection if no violations were found.
            </returns>
        </member>
        <member name="T:Capoala.CmdLine.CommandLineRestrictions.UnknownArgumentsRestriction">
            <summary>
            A restriction which restricts unknown arguments.
            </summary>
        </member>
        <member name="P:Capoala.CmdLine.CommandLineRestrictions.UnknownArgumentsRestriction.KnownArguments">
            <summary>
            A collection of all known <see cref="T:Capoala.CmdLine.ICommandLineArgument"/>.
            </summary>
        </member>
        <member name="P:Capoala.CmdLine.CommandLineRestrictions.UnknownArgumentsRestriction.KnownSpecifications">
            <summary>
            A collection of all known <see cref="T:Capoala.CmdLine.ICommandLineSpecification"/>.
            </summary>
        </member>
        <member name="M:Capoala.CmdLine.CommandLineRestrictions.UnknownArgumentsRestriction.#ctor(System.Collections.Generic.IEnumerable{Capoala.CmdLine.ICommandLineArgument},System.Collections.Generic.IEnumerable{Capoala.CmdLine.ICommandLineSpecification})">
            <summary>
            Creates a new <see cref="T:Capoala.CmdLine.CommandLineRestrictions.UnknownArgumentsRestriction"/> instance.
            </summary>
            <param name="knownArguments">A collection of all known <see cref="T:Capoala.CmdLine.ICommandLineArgument"/>.</param>
            <param name="knownSpecifications">A collection of all known <see cref="T:Capoala.CmdLine.ICommandLineSpecification"/>.</param>
        </member>
        <member name="M:Capoala.CmdLine.CommandLineRestrictions.UnknownArgumentsRestriction.GetViolations">
            <summary>
            Performs all necessary queries to determine whether any violations were found, returning all violation objects as <see cref="T:Capoala.CmdLine.CommandLineViolation"/>.
            </summary>
            <returns>
            Returns a collection of <see cref="T:Capoala.CmdLine.CommandLineViolation"/> representing the violations, if any violations where found.
            Returns an empty collection if no violations were found.
            </returns>
        </member>
        <member name="T:Capoala.CmdLine.CommandLineRestrictions.FirstArgMustBeRootRestriction">
            <summary>
            A restriction which enforces the hierarchal order.
            </summary>
        </member>
        <member name="P:Capoala.CmdLine.CommandLineRestrictions.FirstArgMustBeRootRestriction.RootSpecification">
            <summary>
            The root specification.
            </summary>
        </member>
        <member name="M:Capoala.CmdLine.CommandLineRestrictions.FirstArgMustBeRootRestriction.#ctor(Capoala.CmdLine.ICommandLineSpecification)">
            <summary>
            Creates a new <see cref="T:Capoala.CmdLine.CommandLineRestrictions.FirstArgMustBeRootRestriction"/> instance.
            </summary>
            <param name="rootSpecification">The root specification.</param>
        </member>
        <member name="M:Capoala.CmdLine.CommandLineRestrictions.FirstArgMustBeRootRestriction.GetViolations">
            <summary>
            Performs all necessary queries to determine whether any violations were found, returning all violation objects as <see cref="T:Capoala.CmdLine.CommandLineViolation"/>.
            </summary>
            <returns>
            Returns a collection of <see cref="T:Capoala.CmdLine.CommandLineViolation"/> representing the violations, if any violations where found.
            Returns an empty collection if no violations were found.
            </returns>
        </member>
        <member name="T:Capoala.CmdLine.CommandLineRestrictions.ParameterCountRestriction">
            <summary>
            A restriction which specifies how many parameters an <see cref="T:Capoala.CmdLine.ICommandLineArgument"/> should have.
            </summary>
        </member>
        <member name="P:Capoala.CmdLine.CommandLineRestrictions.ParameterCountRestriction.CallChain">
            <summary>
            The call-chain.
            </summary>
        </member>
        <member name="P:Capoala.CmdLine.CommandLineRestrictions.ParameterCountRestriction.MinParamsAllowed">
            <summary>
            The minimum number of required parameters.
            </summary>
        </member>
        <member name="P:Capoala.CmdLine.CommandLineRestrictions.ParameterCountRestriction.MaxParamsAllowed">
            <summary>
            The maximum number of allowed parameters.
            </summary>
        </member>
        <member name="M:Capoala.CmdLine.CommandLineRestrictions.ParameterCountRestriction.#ctor(System.Int32,System.Int32,Capoala.CmdLine.ICommandLineArgument[])">
            <summary>
            Creates a new instance of <see cref="T:Capoala.CmdLine.CommandLineRestrictions.ParameterCountRestriction"/>.
            </summary>
            <param name="min">The minimum number of required parameters.</param>
            <param name="max">The maximum number of allowed parameters.</param>
            <param name="callChain">The call-chain.</param>
        </member>
        <member name="M:Capoala.CmdLine.CommandLineRestrictions.ParameterCountRestriction.GetViolations">
            <summary>
            Performs all necessary queries to determine whether any violations were found, returning all violation objects as <see cref="T:Capoala.CmdLine.CommandLineViolation"/>.
            </summary>
            <returns>
            Returns a collection of <see cref="T:Capoala.CmdLine.CommandLineViolation"/> representing the violations, if any violations where found.
            Returns an empty collection if no violations were found.
            </returns>
        </member>
        <member name="T:Capoala.CmdLine.CommandLineRestrictions.IllegalComboRestriction">
            <summary>
            A restriction which specifies illegal combinations.
            </summary>
        </member>
        <member name="P:Capoala.CmdLine.CommandLineRestrictions.IllegalComboRestriction.FirstGrouping">
            <summary>
            The first grouping.
            </summary>
        </member>
        <member name="P:Capoala.CmdLine.CommandLineRestrictions.IllegalComboRestriction.SecondGrouping">
            <summary>
            The second grouping.
            </summary>
        </member>
        <member name="M:Capoala.CmdLine.CommandLineRestrictions.IllegalComboRestriction.#ctor(Capoala.CmdLine.ICommandLineGrouping,Capoala.CmdLine.ICommandLineGrouping)">
            <summary>
            Creates a new instance of <see cref="T:Capoala.CmdLine.CommandLineRestrictions.IllegalComboRestriction"/>.
            </summary>
            <param name="firstGrouping">The first grouping.</param>
            <param name="secondGrouping">The second grouping.</param>
        </member>
        <member name="M:Capoala.CmdLine.CommandLineRestrictions.IllegalComboRestriction.GetViolations">
            <summary>
            Performs all necessary queries to determine whether any violations were found, returning all violation objects as <see cref="T:Capoala.CmdLine.CommandLineViolation"/>.
            </summary>
            <returns>
            Returns a collection of <see cref="T:Capoala.CmdLine.CommandLineViolation"/> representing the violations, if any violations where found.
            Returns an empty collection if no violations were found.
            </returns>
        </member>
        <member name="T:Capoala.CmdLine.CommandLineRestrictions.MandatedComboRestriction">
            <summary>
            A restriction which specifies mandated combinations.
            </summary>
        </member>
        <member name="P:Capoala.CmdLine.CommandLineRestrictions.MandatedComboRestriction.FirstGrouping">
            <summary>
            The first grouping.
            </summary>
        </member>
        <member name="P:Capoala.CmdLine.CommandLineRestrictions.MandatedComboRestriction.SecondGrouping">
            <summary>
            The second grouping.
            </summary>
        </member>
        <member name="M:Capoala.CmdLine.CommandLineRestrictions.MandatedComboRestriction.#ctor(Capoala.CmdLine.ICommandLineGrouping,Capoala.CmdLine.ICommandLineGrouping)">
            <summary>
            Creates a new instance of <see cref="T:Capoala.CmdLine.CommandLineRestrictions.IllegalComboRestriction"/>.
            </summary>
            <param name="firstGrouping">The first grouping.</param>
            <param name="secondGrouping">The second grouping.</param>
        </member>
        <member name="M:Capoala.CmdLine.CommandLineRestrictions.MandatedComboRestriction.GetViolations">
            <summary>
            Performs all necessary queries to determine whether any violations were found, returning all violation objects as <see cref="T:Capoala.CmdLine.CommandLineViolation"/>.
            </summary>
            <returns>
            Returns a collection of <see cref="T:Capoala.CmdLine.CommandLineViolation"/> representing the violations, if any violations where found.
            Returns an empty collection if no violations were found.
            </returns>
        </member>
        <member name="T:Capoala.CmdLine.CommandLineRestrictions.MustContainAtLeastOneArgumentRestriction">
            <summary>
            A restriction which specifies that at least one argument must be supplied.
            </summary>
        </member>
        <member name="M:Capoala.CmdLine.CommandLineRestrictions.MustContainAtLeastOneArgumentRestriction.GetViolations">
            <summary>
            Performs all necessary queries to determine whether any violations were found, returning all violation objects as <see cref="T:Capoala.CmdLine.CommandLineViolation"/>.
            </summary>
            <returns>
            Returns a collection of <see cref="T:Capoala.CmdLine.CommandLineViolation"/> representing the violations, if any violations where found.
            Returns an empty collection if no violations were found.
            </returns>
        </member>
        <member name="T:Capoala.CmdLine.CommandLineRestrictions.CannotContainAnyArgumentsRestriction">
            <summary>
            A restriction which specifies that at least one argument must be supplied.
            </summary>
        </member>
        <member name="M:Capoala.CmdLine.CommandLineRestrictions.CannotContainAnyArgumentsRestriction.GetViolations">
            <summary>
            Performs all necessary queries to determine whether any violations were found, returning all violation objects as <see cref="T:Capoala.CmdLine.CommandLineViolation"/>.
            </summary>
            <returns>
            Returns a collection of <see cref="T:Capoala.CmdLine.CommandLineViolation"/> representing the violations, if any violations where found.
            Returns an empty collection if no violations were found.
            </returns>
        </member>
        <member name="T:Capoala.CmdLine.CommandLineViolation">
            <summary>
            Represents a command line violation.
            </summary>
        </member>
        <member name="P:Capoala.CmdLine.CommandLineViolation.Violation">
            <summary>
            The violation.
            </summary>
        </member>
        <member name="P:Capoala.CmdLine.CommandLineViolation.Message">
            <summary>
            The message.
            </summary>
        </member>
    </members>
</doc>
